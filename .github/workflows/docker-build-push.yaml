name: "docker-build-push" 

on:
  release:
    types: ["published"]
  
jobs:
  docker:
    runs-on: "ubuntu-latest"
    
    env:
      IMAGE_NAME: lnzap/bitcoind

    steps:
      # checkout the code (git clone with fetch-depth=1... use 0 to fetch the all references)
      - name: Checkout Code
        uses: actions/checkout@v2
      
      # set the environment variable with the name of the release tag
      - name: Set env
        run: |
          echo "RELEASE_TAG=$(echo ${{ github.ref }} | awk -F '/' '{print $3}')" >> $GITHUB_ENV
          echo "VERSION=$(echo ${{ github.ref }} | awk -F 'v' '{print $2}')" >> $GITHUB_ENV

      # builds the regular image
      - name: Build image
        run: | 
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }} --build-arg VERSION=${{ env.VERSION }} .
          docker image tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.IMAGE_NAME }}:latest 

      # Version test for the previously built image
      - name: Image version Test
        run:  |
          ./.github/scripts/version-test.sh \
            ${{ env.RELEASE_TAG }} \
            $(docker run ${{ env.IMAGE_NAME }}:${{ env.VERSION }} bitcoind -version | grep 'version ' | awk -F 'version ' '{print $2}')

      # login to dockerhub
      - name: Dockerhub login
        run: |
          docker login \
          --username ${{ secrets.DOCKER_USERNAME }} \
          --password ${{ secrets.DOCKER_PASSWORD }}
      
      # Push both images to Dockerhub
      - name: Push image to Dockerhub
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ env.IMAGE_NAME }}:latest