name: "docker-build-push" 

on:
  push:

  release:
    types: ["published"]
  
jobs:
  docker:
    runs-on: "ubuntu-latest"
    
    env:
      IMAGE_NAME: lnzap/bitcoind

    steps:
      # checkout the code (git clone with fetch-depth=1... use 0 to fetch the all references)
      - name: Checkout Code
        uses: actions/checkout@v2
      
      # set the environment variable with the name of the release tag
      - name: Set env
        run: |
          echo "RELEASE_TAG=$(echo ${{ github.ref }} | awk -F '/' '{print $3}')" >> $GITHUB_ENV
          echo "VERSION=0.21.1" >> $GITHUB_ENV
      #echo "VERSION=$(echo ${{ env.RELEASE_TAG }} | awk -F 'v' '{print $2}')" >> $GITHUB_ENV

      # builds the regular image
      - name: Build image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }} \
          --build-arg VERSION=${{ env.VERSION }} \

      # Version test for the previously built image
      - name: Image version Test
        run:  |
          ./.github/scripts/version-test.sh \
            ${{ env.RELEASE_TAG }} \
            $(docker run ${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }} bitcoind -version | grep 'version ' | awk -F 'version ' '{print $2}')

      # login to dockerhub
      - name: Dockerhub login
        run: |
          docker login \
          --username ${{ secrets.DOCKER_USERNAME }} \
          --password ${{ secrets.DOCKER_PASSWORD }}
      
      # Push both images to Dockerhub
      #- name: Push image to Dockerhub
      #  run: |
      #    docker push ${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}

            # the output of the previous command will be parsed and used as the the git tag and
      # the release will be created automatically
      - uses: alice-biometrics/release-creator/@v1.0.5
        name: Creating release
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.RELEASE_TAG }}
          description: '[Bitcoin Core](https://github.com/bitcoin/bitcoin) images are publicly available from dockerhub\n\n## Dockerhub Tags:\n- `${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}`'